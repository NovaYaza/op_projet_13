swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login, carabistouille
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  # ----------------- Transactions Endpoints -----------------
  
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get all transactions for specified month (current month by default)
      description: Returns all transactions grouped by account for the current month
      parameters:
        - in: query
          name: month
          type: string
          example: "2025-08"
          description: Filter transactions by month (format YYYY-MM). This parameter is facultative, is not provided, current month is used.
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '400':
          description: Bad Request – invalid query parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get transaction details
      description: Returns the details of a specific transaction
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Bad Request – invalid transaction ID format
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update transaction
      description: Modify details of a specific transaction.  
                    The user can:  
                    - Update the **category** of a transaction via a dropdown menu (e.g., Food, Transport, Leisure, Rent, etc.)  
                    - Add or edit a **personal note** (free text) attached to the transaction.  

                    Only the category and notes are editable — the amount, date, and description remain unchanged.
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction
        - in: body
          name: body
          description: Transaction fields to update
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Bad Request – invalid input data
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

# ------------------------------------------------------------

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Successfully updated user profile"
      body:
        type: object
        properties:
          id:
            type: string
            example: "abc123"
          email:
            type: string
            example: "tony@stark.com"
          firstName:
            type: string
            example: "Tony"
          lastName:
            type: string
            example: "Stark"
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
        example: "Tony"
      lastName:
        type: string
        example: "Stark"
  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Successfully retrieved transactions"
      body:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    properties:
      id:
        type: string
        example: "trx123"
      date:
        type: string
        format: date
        example: "2025-08-19"
      description:
        type: string
        example: "Payment to Grocery Store"
      amount:
        type: number
        example: 45.67
      balance:
        type: number
        example: 1200.50
      category:
        type: string
        example: "Food"
      notes:
        type: string
        example: "Weekly shopping"
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
        description: Updated category for the transaction
        example: "Food"
      notes:
        type: string
        description: Optional note to attach to this transaction
        example: "Updated note for this transaction"